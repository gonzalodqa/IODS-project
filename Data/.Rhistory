corrplot(cor_matrix, method="circle", type="upper", cl.pos="b", tl.pos="d", tl.cex=0.6)
cor_matrix<-cor(Boston) %>% round(digits=2)
cor_matrix
corrplot(cor_matrix, method="circle", type="upper", cl.pos="b", tl.pos="d", tl.cex=0.6)
cor_matrix<-cor(Boston) %>% round(digits=2)
cor_matrix
corrplot(cor_matrix, method="circle", type="upper", cl.pos="b", tl.pos="d", tl.cex=0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
bins <- quantile(boston_scaled$crim)
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, label=c("low","med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
test <- boston_scaled[-ind,]
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ . , data = train)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col=classes, pch=classes)
lda.arrows(lda.fit, myscale = 2)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col=classes, pch=classes)
lda.arrows(lda.fit, myscale = 2)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
boston_s <- scale(Boston)
boston_s <- as.data.frame(boston_s)
summary(dist_eu)
dist_eu <- dist(boston_s)
boston_s <- scale(Boston)
boston_s <- as.data.frame(boston_s)
dist_eu <- dist(boston_s)
summary(dist_eu)
km <-kmeans(boston_s, centers = 4)
pairs(boston_s[6:10], col = km$cluster)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(boston_s, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = 'line')
library(ggplot2)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(boston_s, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = 'line')
library(GGally)
km <-kmeans(boston_s, centers = 2)
pairs(boston_s[6:10],col = km$cluster)
install.packages("contrib.url")
library(MASS)
summary(Boston)
dim(Boston)
str(Boston)
install.packages("contrib.url")
library(dplyr)
install.packages("corrplot")
category
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
dim(hd)
dim(gii)
str(hd)
str(gii)
library(dplyr)
summary(hd)
summary(gii)
colnames(hd) <- c("rank", "country", "hdi", "life_exp", "exp_edu", "mean_edu","gni_c","gni_rank")
colnames(gii) <-  c("gii_rank", "country","gii", "mat_mort","ad_birth","repr_parl","sedu_f","sed_m","lab_f","lab_m")
gii <- mutate(gii, sedu_ratio= sedu_f/sed_m)
gii <- mutate(gii, lab_ratio=lab_f/lab_m)
human <- inner_join(hd, gii, by = "country")
str(human)
dim(human)
write.csv(human, file = "human.csv", row.names = FALSE)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
dim(hd)
dim(gii)
str(hd)
str(gii)
library(dplyr)
summary(hd)
summary(gii)
colnames(hd) <- c("rank", "country", "hdi", "life_exp", "exp_edu", "mean_edu","gni_c","gni_rank")
colnames(gii) <-  c("gii_rank", "country","gii", "mat_mort","ad_birth","repr_parl","sedu_f","sed_m","lab_f","lab_m")
gii <- mutate(gii, sedu_ratio= sedu_f/sed_m)
gii <- mutate(gii, lab_ratio=lab_f/lab_m)
human <- dplyr::inner_join(hd, gii, by = "country")
str(human)
dim(human)
dim(human_)
str(human_)
gii <- mutate(gii, sedu_ratio= sedu_f/sed_m)
gii <- mutate(gii, lab_ratio=lab_f/lab_m)
human <- dplyr::inner_join(hd, gii, by = "country")
str(human)
dim(human)
write.csv(human_, file = "human.csv", row.names = FALSE)
write.csv(human, file = "human.csv", row.names = FALSE)
library("MASS", lib.loc="~/R/win-library/3.4")
install.packages("MASS")
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
summary(hd)
str(gii)
dim(gii)
summary(gii)
colnames(hd)[1] <- "HDI.rank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "lifexp"
colnames(hd)[5] <- "yr.eduexp"
colnames(hd)[6] <- "meanyr.edu"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNIrank-HDIrank"
colnames(gii)[1] <- "GII.rank"
colnames(gii)[2] <- "country"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "matermor"
colnames(gii)[5] <- "adobirth"
colnames(gii)[6] <- "repreparl"
colnames(gii)[7] <- "edu2F"
colnames(gii)[8] <- "edu2M"
colnames(gii)[9] <- "labforceF"
colnames(gii)[10] <- "labforceM"
colnames(hd)
colnames(gii)
gii <- mutate(gii, ratio.edu2 = gii$edu2F/gii$edu2M)
gii <- mutate(gii, ratio.labforce = gii$labforceF/gii$labforceM)
colnames(gii)
summary(gii$ratio.edu2)
summary(gii$ratio.labforce)
library(dplyr)
human <- inner_join(hd, gii, by = "country")
glimpse(human)
write.csv(human, file = "human.csv", row.names = FALSE)
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
summary(hd)
str(gii)
dim(gii)
summary(gii)
colnames(hd)[1] <- "HDI.rank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "lifexp"
colnames(hd)[5] <- "yr.eduexp"
colnames(hd)[6] <- "meanyr.edu"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNIrank-HDIrank"
colnames(gii)[1] <- "GII.rank"
colnames(gii)[2] <- "country"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "matermor"
colnames(gii)[5] <- "adobirth"
colnames(gii)[6] <- "repreparl"
colnames(gii)[7] <- "edu2F"
colnames(gii)[8] <- "edu2M"
colnames(gii)[9] <- "labforceF"
colnames(gii)[10] <- "labforceM"
colnames(hd)
colnames(gii)
gii <- mutate(gii, ratio.edu2 = gii$edu2F/gii$edu2M)
gii <- mutate(gii, ratio.labforce = gii$labforceF/gii$labforceM)
colnames(gii)
summary(gii$ratio.edu2)
summary(gii$ratio.labforce)
library(dplyr)
human <- inner_join(hd, gii, by = "country")
glimpse(human)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human, file = "human.csv", sep = ",", col.names = TRUE, row.names = FALSE)
library(dplyr)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric())
human$GNI
keep <- c("country", "ratio.edu2", "ratio.labforce", "yr.eduexp", "lifexp", "GNI", "matermor", "adobirth", "repreparl")
human <- select(human, one_of(keep))
# Remove all rows with missing values:
complete.cases(human)
data.frame(human, comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
str(human_)
# Remove observations which relate to regions instead of countries:
tail(human_, n= 10)
last <- nrow(human_) - 7
human_ <- human_[1:last,]
rownames(human_) <- human_$country
human_ <- select(human_, -country)
str(human_)
glimpse(human_)
# Finally, we save overwriting the previous human.csv file.
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human_, file = "human.csv", sep = " ", col.names = TRUE, row.names = TRUE)
human <- read.table(file="human.csv", header = TRUE, row.names = 1)
str(human)
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
summary(hd)
str(gii)
dim(gii)
summary(gii)
colnames(hd)[1] <- "HDI.rank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "lifexp"
colnames(hd)[5] <- "yr.eduexp"
colnames(hd)[6] <- "meanyr.edu"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNIrank-HDIrank"
colnames(gii)[1] <- "GII.rank"
colnames(gii)[2] <- "country"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "matermor"
colnames(gii)[5] <- "adobirth"
colnames(gii)[6] <- "repreparl"
colnames(gii)[7] <- "edu2F"
colnames(gii)[8] <- "edu2M"
colnames(gii)[9] <- "labforceF"
colnames(gii)[10] <- "labforceM"
colnames(hd)
colnames(gii)
gii <- mutate(gii, ratio.edu2 = gii$edu2F/gii$edu2M)
gii <- mutate(gii, ratio.labforce = gii$labforceF/gii$labforceM)
colnames(gii)
summary(gii$ratio.edu2)
summary(gii$ratio.labforce)
library(dplyr)
human <- inner_join(hd, gii, by = "country")
glimpse(human)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human, file = "human.csv", sep = ",", col.names = TRUE, row.names = FALSE)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
human <- read.table("human.csv", header = TRUE, sep = ",")
str(human)
install.packages("stringr")
library(stringr)
install.packages("stringr")
library(dplyr)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric())
human$GNI
keep <- c("country", "ratio.edu2", "ratio.labforce", "yr.eduexp", "lifexp", "GNI", "matermor", "adobirth", "repreparl")
human <- select(human, one_of(keep))
# Remove all rows with missing values:
complete.cases(human)
data.frame(human, comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
str(human_)
# Remove observations which relate to regions instead of countries:
tail(human_, n= 10)
last <- nrow(human_) - 7
human_ <- human_[1:last,]
human_ <- select(human_, -country)
rownames(human_) <- human_$country
str(human_)
glimpse(human_)
# Finally, we save overwriting the previous human.csv file.
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human_, file = "human.csv", sep = " ", col.names = TRUE, row.names = TRUE)
human <- read.table(file="human.csv", header = TRUE, row.names = 1)
str(human)
write.table(human_, file = "human.csv", sep = " ", col.names = TRUE, row.names = TRUE)
human <- read.table(file="human.csv", header = TRUE, row.names = 1)
str(human)
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
summary(hd)
str(gii)
dim(gii)
summary(gii)
colnames(hd)[1] <- "HDI.rank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "lifexp"
colnames(hd)[5] <- "yr.eduexp"
colnames(hd)[6] <- "meanyr.edu"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNIrank-HDIrank"
colnames(gii)[1] <- "GII.rank"
colnames(gii)[2] <- "country"
colnames(gii)[3] <- "GII"
colnames(gii)[4] <- "matermor"
colnames(gii)[5] <- "adobirth"
colnames(gii)[6] <- "repreparl"
colnames(gii)[7] <- "edu2F"
colnames(gii)[8] <- "edu2M"
colnames(gii)[9] <- "labforceF"
colnames(gii)[10] <- "labforceM"
colnames(hd)
colnames(gii)
gii <- mutate(gii, ratio.edu2 = gii$edu2F/gii$edu2M)
gii <- mutate(gii, ratio.labforce = gii$labforceF/gii$labforceM)
colnames(gii)
summary(gii$ratio.edu2)
summary(gii$ratio.labforce)
library(dplyr)
human <- inner_join(hd, gii, by = "country")
glimpse(human)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human, file = "human.csv", sep = ",", col.names = TRUE, row.names = FALSE)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
human <- read.table("human.csv", header = TRUE, sep = ",")
str(human)
install.packages("stringr")
install.packages("stringr")
library(stringr)
library(dplyr)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric())
human$GNI
keep <- c("country", "ratio.edu2", "ratio.labforce", "yr.eduexp", "lifexp", "GNI", "matermor", "adobirth", "repreparl")
human <- select(human, one_of(keep))
# Remove all rows with missing values:
complete.cases(human)
data.frame(human, comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
str(human_)
# Remove observations which relate to regions instead of countries:
tail(human_, n= 10)
last <- nrow(human_) - 7
human_ <- human_[1:last,]
rownames(human_) <- human_$country
human_ <- select(human_, -country)
str(human_)
glimpse(human_)
# Finally, we save overwriting the previous human.csv file.
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human_, file = "human.csv", sep = ",", col.names = TRUE, row.names = TRUE)
human <- read.table(file="human.csv", header = TRUE, row.names = 1)
str(human)
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
summary(hd)
dim(hd)
dim(gii)
str(gii)
summary(gii)
colnames(hd)[1] <- "HDI.rank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "HDI"
colnames(hd)[4] <- "lifexp"
colnames(hd)[5] <- "yr.eduexp"
colnames(hd)[6] <- "meanyr.edu"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNIrank-HDIrank"
colnames(gii)[2] <- "country"
colnames(gii)[1] <- "GII.rank"
colnames(gii)[4] <- "matermor"
colnames(gii)[3] <- "GII"
colnames(gii)[5] <- "adobirth"
colnames(gii)[6] <- "repreparl"
colnames(gii)[7] <- "edu2F"
colnames(gii)[8] <- "edu2M"
colnames(gii)[9] <- "labforceF"
colnames(gii)[10] <- "labforceM"
colnames(hd)
colnames(gii)
gii <- mutate(gii, ratio.edu2 = gii$edu2F/gii$edu2M)
gii <- mutate(gii, ratio.labforce = gii$labforceF/gii$labforceM)
colnames(gii)
summary(gii$ratio.edu2)
summary(gii$ratio.labforce)
library(dplyr)
human <- inner_join(hd, gii, by = "country")
glimpse(human)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human, file = "human.csv", sep = ",", col.names = TRUE, row.names = FALSE)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
human <- read.table("human.csv", header = TRUE, sep = ",")
str(human)
install.packages("stringr")
install.packages("stringr")
library(stringr)
library(dplyr)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric())
human$GNI
keep <- c("country", "ratio.edu2", "ratio.labforce", "yr.eduexp", "lifexp", "GNI", "matermor", "adobirth", "repreparl")
human <- select(human, one_of(keep))
# Remove all rows with missing values:
complete.cases(human)
data.frame(human, comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
str(human_)
# Remove observations which relate to regions instead of countries:
tail(human_, n= 10)
last <- nrow(human_) - 7
human_ <- human_[1:last,]
rownames(human_) <- human_$country
human_ <- select(human_, -country)
str(human_)
glimpse(human_)
# Finally, we save overwriting the previous human.csv file.
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human_, file = "human.csv", sep = ",", col.names = TRUE, row.names = TRUE)
human <- read.table(file="human.csv", header = TRUE, row.names = 1)
str(human)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
human <- read.table("human.csv", header = TRUE, sep = ",")
str(human)
install.packages("stringr")
install.packages("stringr")
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
# Gonzalo de Quesada
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
#read the datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
summary(hd)
str(gii)
summary(gii)
dim(gii)
colnames(hd)[1] <- "HDI.rank"
colnames(hd)[2] <- "country"
colnames(hd)[3] <- "HDI"
colnames(hd)[5] <- "yr.eduexp"
colnames(hd)[4] <- "lifexp"
colnames(hd)[6] <- "meanyr.edu"
colnames(hd)[7] <- "GNI"
colnames(hd)[8] <- "GNIrank-HDIrank"
colnames(gii)[1] <- "GII.rank"
colnames(gii)[3] <- "GII"
colnames(gii)[2] <- "country"
colnames(gii)[4] <- "matermor"
colnames(gii)[5] <- "adobirth"
colnames(gii)[6] <- "repreparl"
colnames(gii)[8] <- "edu2M"
colnames(gii)[7] <- "edu2F"
colnames(gii)[10] <- "labforceM"
colnames(gii)[9] <- "labforceF"
colnames(hd)
colnames(gii)
gii <- mutate(gii, ratio.edu2 = gii$edu2F/gii$edu2M)
colnames(gii)
gii <- mutate(gii, ratio.labforce = gii$labforceF/gii$labforceM)
summary(gii$ratio.edu2)
summary(gii$ratio.labforce)
library(dplyr)
human <- inner_join(hd, gii, by = "country")
glimpse(human)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human, file = "human.csv", sep = ",", col.names = TRUE, row.names = FALSE)
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
human <- read.table("human.csv", header = TRUE, sep = ",")
str(human)
install.packages("stringr")
library(stringr)
library(dplyr)
human <- mutate(human, GNI = str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric())
human$GNI
keep <- c("country", "ratio.edu2", "ratio.labforce", "yr.eduexp", "lifexp", "GNI", "matermor", "adobirth", "repreparl")
human <- select(human, one_of(keep))
# Remove all rows with missing values:
complete.cases(human)
data.frame(human, comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
str(human_)
# Remove observations which relate to regions instead of countries:
tail(human_, n= 10)
last <- nrow(human_) - 7
human_ <- human_[1:last,]
rownames(human_) <- human_$country
human_ <- select(human_, -country)
str(human_)
glimpse(human_)
# Finally, we save overwriting the previous human.csv file.
setwd("C:/Users/D E L L/Documents/GitHub/IODS-project/Data")
write.table(human_, file = "human.csv", sep = ",", col.names = TRUE, row.names = TRUE)
human <- read.table(file="human.csv", header = TRUE, row.names = 1)
str(human)
View(human)
View(human_)
install.packages("FactoMineR")
